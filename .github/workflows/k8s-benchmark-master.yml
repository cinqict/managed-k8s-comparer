# This workflow orchestrates the full test suite: infra provisioning, ArgoCD install, app CI, and deployment.
name: 'K8s Benchmark Master Flow'

on:
  workflow_dispatch:

jobs:
  infra:
    uses: ./.github/workflows/terraform-ovh.yml
    secrets: inherit

  argocd:
    needs: infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download kubeconfig artifact
        uses: actions/download-artifact@v4
        with:
          name: kubeconfig
          path: .

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Wait for Kubernetes API (Linux)
        run: |
          for i in {1..30}; do
            kubectl --kubeconfig=kubeconfig.yaml get nodes && exit 0 || sleep 20
          done
          echo "Cluster did not become ready in time." && exit 1

      - name: Install ArgoCD
        run: |
          kubectl --kubeconfig=kubeconfig.yaml create namespace argocd || true
          kubectl --kubeconfig=kubeconfig.yaml apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          kubectl --kubeconfig=kubeconfig.yaml -n argocd rollout status deployment/argocd-server --timeout=300s

  app_ci:
    needs: argocd
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Dummy App Image
        uses: docker/build-push-action@v5
        with:
          context: ./dummy-app
          file: ./dummy-app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dummy-app:latest

      - name: Download kubeconfig artifact
        uses: actions/download-artifact@v4
        with:
          name: kubeconfig
          path: .

      - name: Download DB credentials
        uses: actions/download-artifact@v4
        with:
          name: pgsql-credentials
          path: .

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Create pgsql-credentials Secret
        run: |
          kubectl --kubeconfig=kubeconfig.yaml delete secret pgsql-credentials || true
          kubectl --kubeconfig=kubeconfig.yaml create secret generic pgsql-credentials \
            --from-file=host=pgsql_host.txt \
            --from-file=port=pgsql_port.txt \
            --from-file=user=pgsql_user.txt \
            --from-file=password=pgsql_password.txt \
            --from-file=dbname=pgsql_dbname.txt

      - name: Deploy Dummy App via ArgoCD
        run: |
          sed 's#\${GITHUB_REPOSITORY}#${{ github.repository }}#g' ./dummy-app/argocd-app.yaml > ./dummy-app/argocd-app-patched.yaml
          kubectl --kubeconfig=kubeconfig.yaml apply -f ./dummy-app/argocd-app-patched.yaml

  deploy:
    needs: app_ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # You may need to retrieve kubeconfig here as well
      - name: Dummy Deploy
        run: echo "ArgoCD app bootstrap/sync would run here."
