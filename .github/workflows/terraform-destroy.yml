# This workflow destroys landing zone resources using Terraform for OVH or Azure
name: 'Terraform Destroy'

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Which environment to destroy?'
        required: true
        type: choice
        options:
          - ovh
          - azure
          - hetzner

jobs:
  destroy-ovh:
    if: ${{ github.event.inputs.target == 'ovh' }}
    runs-on: ubuntu-latest
    env:
      TF_VAR_ovh_endpoint: ${{ vars.OVH_ENDPOINT }}
      TF_VAR_ovh_application_key: ${{ secrets.OVH_APPLICATION_KEY }}
      TF_VAR_ovh_application_secret: ${{ secrets.OVH_APPLICATION_SECRET }}
      TF_VAR_ovh_consumer_key: ${{ secrets.OVH_CONSUMER_KEY }}
      TF_VAR_ovh_project_id: ${{ secrets.OVH_PROJECT_ID }}
      ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ vars.AZ_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.AZ_TENANT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: |
          terraform -chdir=terraform/ovh init --reconfigure \
            -backend-config="resource_group_name=${{ vars.RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ vars.STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=ovhtfstate" \
            -backend-config="key=terraform.tfstate"

      - name: Terraform Destroy
        run: terraform -chdir=terraform/ovh destroy -auto-approve

  destroy-azure:
    if: ${{ github.event.inputs.target == 'azure' }}
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ vars.AZ_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.AZ_TENANT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: |
          terraform -chdir=terraform/azure init --reconfigure \
            -backend-config="resource_group_name=${{ vars.RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ vars.STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=azuretfstate" \
            -backend-config="key=terraform.tfstate"

      - name: Terraform Destroy
        run: terraform -chdir=terraform/azure destroy -auto-approve

  destroy-hetzner:
    if: ${{ github.event.inputs.target == 'hetzner' }}
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ vars.AZ_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.AZ_TENANT_ID }}
      HCLOUD_TOKEN: ${{ secrets.HETZNER_API_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: |
          terraform -chdir=terraform/hetzner init --reconfigure \
            -backend-config="resource_group_name=${{ vars.RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ vars.STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=hetznertfstate" \
            -backend-config="key=terraform.tfstate"

      - name: Terraform Destroy
        run: terraform -chdir=terraform/hetzner destroy -auto-approve
