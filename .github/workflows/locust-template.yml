name: 'Locust Loadtest'
on:
  workflow_call:
jobs:
  locust:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download kubeconfig artifact
        uses: actions/download-artifact@v4
        with:
          name: kubeconfig
          path: .
      - name: Set KUBECONFIG env var
        run: echo "KUBECONFIG=$GITHUB_WORKSPACE/kubeconfig.yaml" >> $GITHUB_ENV
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Add Locust Helm repo
        run: |
          helm repo add deliveryhero https://charts.deliveryhero.io/
          helm repo update
      - name: Create Locustfile ConfigMap
        run: |
          kubectl create configmap my-loadtest-locustfile --from-file=dummy-app/locustfile.py --dry-run=client -o yaml | kubectl apply -f -
      - name: Install Locust with Helm (OCI)
        run: |
          helm upgrade --install locust oci://ghcr.io/deliveryhero/helm-charts/locust \
            --version 0.32.6 \
            --set service.type=LoadBalancer \
            --set service.port=8089 \
            --set worker.replicas=2 \
            --set loadtest.name=my-loadtest \
            --set loadtest.locust_locustfile_configmap=my-loadtest-locustfile
      - name: Wait for Locust GUI to be ready
        run: |
          # Wait for the service to exist
          for i in {1..30}; do
            if kubectl get svc locust >/dev/null 2>&1; then
              break
            fi
            sleep 5
          done
          # Wait for the LoadBalancer IP
          for i in {1..30}; do
            ip=$(kubectl get svc locust -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            if [ -n "$ip" ]; then
              echo "Locust GUI available at http://$ip:8089"
              break
            fi
            sleep 10
          done
