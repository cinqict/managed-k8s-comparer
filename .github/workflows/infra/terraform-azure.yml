# This workflow deploys Azure landing zone resources using Terraform
name: 'Terraform Azure Landing Zone'

on:
  workflow_call:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform -chdir=providers/azure init --reconfigure

      - name: Terraform Plan
        run: terraform -chdir=providers/azure plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        run: |
          start=$(date +%s)
          terraform -chdir=providers/azure apply -auto-approve
          end=$(date +%s)
          duration=$((end - start))
          echo "Terraform apply duration: ${duration} seconds" > apply_duration.txt

      - name: Export kubeconfig
        run: terraform -chdir=providers/azure output -raw kubeconfig > kubeconfig.yaml

      - name: Upload kubeconfig as artifact
        uses: actions/upload-artifact@v4
        with:
          name: kubeconfig
          path: kubeconfig.yaml

      - name: Export pgsql_service_name to file
        run: terraform -chdir=providers/azure output -raw pgsql_server_name > pgsql_service_name.txt

      - name: Export DB credentials to files
        run: |
          terraform -chdir=providers/azure output -raw pgsql_host > pgsql_host.txt
          terraform -chdir=providers/azure output -raw pgsql_port > pgsql_port.txt
          terraform -chdir=providers/azure output -raw pgsql_dbname > pgsql_dbname.txt
          terraform -chdir=providers/azure output -raw pgsql_username > pgsql_username.txt
          terraform -chdir=providers/azure output -raw pgsql_password > pgsql_password.txt

      - name: Upload DB credentials as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pgsql-credentials
          path: |
            pgsql_host.txt
            pgsql_port.txt
            pgsql_username.txt
            pgsql_password.txt
            pgsql_dbname.txt
