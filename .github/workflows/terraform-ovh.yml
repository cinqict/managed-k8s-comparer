# This workflow deploys OVH landing zone resources using Terraform
name: 'Terraform OVH Landing Zone'

on:
  workflow_call:
  workflow_dispatch:
  # push:
  #   paths:
  #     - 'providers/ovh/**'
  #     - '.github/workflows/terraform-ovh.yml'

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_ovh_endpoint: ${{ secrets.OVH_ENDPOINT }}
      TF_VAR_ovh_application_key: ${{ secrets.OVH_APPLICATION_KEY }}
      TF_VAR_ovh_application_secret: ${{ secrets.OVH_APPLICATION_SECRET }}
      TF_VAR_ovh_consumer_key: ${{ secrets.OVH_CONSUMER_KEY }}
      TF_VAR_ovh_project_id: ${{ secrets.OVH_PROJECT_ID }}
      AZ_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      AZ_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
      AZ_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
      AZ_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform -chdir=providers/ovh init --reconfigure

      - name: Terraform Plan
        run: terraform -chdir=providers/ovh plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        run: |
          start=$(date +%s)
          terraform -chdir=providers/ovh apply -auto-approve
          end=$(date +%s)
          duration=$((end - start))
          echo "Terraform apply duration: ${duration} seconds" > apply_duration.txt

      - name: Export kubeconfig
        run: terraform -chdir=providers/ovh output -raw kubeconfig > kubeconfig.yaml

      - name: Upload kubeconfig as artifact
        uses: actions/upload-artifact@v4
        with:
          name: kubeconfig
          path: kubeconfig.yaml
